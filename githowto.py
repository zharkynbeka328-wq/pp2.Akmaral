#Репозиторий
#Репозиторий Git — это хранилище, в котором расположен ваш проект и его история.
#Это может быть локальное хранилище где-то на вашем компьютере или удаленное хранилище на сервисе типа GitHub или другом хостинге в Интернете.
#Репози торий служит для отслеживания изменений в проекте, координации работы между несколькими людьми и отслеживания истории проекта.


#Коммит
#Вы можете думать о коммите как о снимке вашего проекта в определенный момент времени. 
#Правда, коммит содержит только информацию об изменениях, которые были внесены в репозиторий с момента последнего коммита. 
#Он не содержит все файлы репозитория (если только это не первый коммит). 
#Таким образом, каждый коммит — это небольшой кусочек истории репозитория, основанный на предыдущем коммите.
#Все они связаны между собой в цепочку, формируя историю изменений вашего проекта.


#Ветка
#Ветка — это параллельная версия репозитория.
#Ветки позволяют вам работать над отдельными функциями вашего проекта, не влияя на основную версию.
#Закончив работу над новой фичей, вы можете объединить эту ветку с основной версией проекта.


#В репозитории всегда есть по крайней мере одна ветка, даже если вы сами ее не создавали. Обычно ее называют веткой main (или master).


#git config --global user.name "Your Name"
#git config --global user.email "your_email@whatever.com"   (установка имени и электронной почти) 
#git config --global init.defaultBranch main     (имя ветки)
#git config --global core.autocrlf input
#git config --global core.safecrlf warn


#mkdir work   (создала папку work)
#cd work     
#touch hello.html    (создала пустой файл hello.html.)
#git init   (появилась скрытая папка .git )
#git add hello.html
#git commit -m "Initial Commit"   (сделала первый коммит)
#git status   (проверила статус)
#<h1>Hello, World!</h1>
#git add hello.html
#git status


#git add a.html
#git add b.html
#git commit -m "Changes for a and b"
#git add c.html
#git commit -m "Unrelated change to c"



#git log            ///Показывает полную историю коммитов (хэш, автор, дата, сообщение)
#git log --pretty=oneline         ///Каждый коммит в одной строке
#git log --oneline --max-count=2        ///Покажет только последние 2 коммита в сокращённом виде
#git log --oneline --since="5 minutes ago"     ///Отображает коммиты, сделанные за последние 5 минут
#git log --oneline --until="5 minutes ago"      ///Показывает коммиты, сделанные до 5 минут назад
#git log --oneline --author="Your Name"     ///Фильтрует коммиты только определённого автора
#git log --oneline --all      ///Показывает историю коммитов для всех веток
#git log --all --pretty=format:"%h %cd %s (%an)" --since="7 days ago"      ///Показывает все коммиты за последние 7 дней со всех веток 
#%h → сокращённый хэш  , %cd → дата коммита , %s → сообщение коммита , %an → имя автора


#git status - показывает состояние репозитория
#git add - добавляет изменения
#git commit -m - используется, чтобы сохранить изменения с сообщением
#git push - отправляет изменения в гитхаб
